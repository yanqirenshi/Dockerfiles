##### ################################################################
#####
#####    Base
#####    ====
#####      https://cloud.docker.com/repository/registry-1.docker.io/renshi/docs
#####
#####    Build
#####    -----
#####      docker build -t renshi/docs -f Dockerfile.Docs .
#####
#####    Run
#####    ---
#####      docker run -it renshi/docs /bin/bash
#####
##### ################################################################
FROM opensuse/tumbleweed

MAINTAINER Renshi <yanqirenshi@gmail.com>


##### ################################################################
#####  Install of zypper
##### ################################################################
USER root

RUN zypper --non-interactive refresh
RUN zypper --non-interactive update

RUN zypper --non-interactive install -t pattern devel_basis
RUN zypper --non-interactive install libffi-devel libyaml-devel libopenssl-devel readline-devel bzip2
RUN zypper --non-interactive install curl libcurl-devel
RUN zypper --non-interactive install gzip
RUN zypper --non-interactive install libev-devel
RUN zypper --non-interactive install which
RUN zypper --non-interactive install emacs
RUN zypper --non-interactive install git
RUN zypper --non-interactive install nginx
RUN zypper --non-interactive install wget


##### ################################################################
#####   Group / User
##### ################################################################
USER root

RUN groupadd cl-users
RUN useradd -d /home/cl-user -m -g cl-users cl-user


##### ################################################################
#####   Directories
##### ################################################################
USER cl-user
WORKDIR /home/cl-user

RUN mkdir /home/cl-user/tmp

##### ################################################################
#####   Node.js
##### ################################################################
USER cl-user
WORKDIR /home/cl-user/tmp

RUN wget git.io/nodebrew
RUN perl nodebrew setup

RUN echo 'export PATH=$HOME/.nodebrew/current/bin:$PATH' >> ~/.profile
ENV PATH /home/cl-user/.nodebrew/current/bin:$PATH

RUN nodebrew install stable
RUN nodebrew use stable


##### ################################################################
#####   Riot.js
##### ################################################################
USER cl-user
WORKDIR /home/cl-user

RUN npm install -g riot@v3.13.2


##### ################################################################
#####   Emacs
##### ################################################################
USER cl-user
RUN mkdir -p /home/cl-user/.emacs.d/dist/

WORKDIR /home/cl-user/.emacs.d/dist/

###
### git clone projects
###
RUN git clone https://github.com/yanqirenshi/emacs.git


###
### .emacs.d/init.lisp
###
RUN touch /home/cl-user/.emacs.d/init.el
RUN echo '(load "~/.emacs.d/dist/emacs/init-base.el")'  >> /home/cl-user/.emacs.d/init.el


###
### パッケージのインストール
###
RUN emacs --script /home/cl-user/.emacs.d/dist/emacs/src/package.el
